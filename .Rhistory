plot
data = companies %>%
#filter(intern_status == "Yes") %>%
#filter(pay_status == "Yes") %>%
group_by(survey_company, year.x, major1, survey_salary) %>%
summarize(count=n()) %>%
arrange(survey_company, year.x, major1, survey_salary, -count)
#data$employer = fct_explicit_na(data$employer, "unkown")
#finding all NAs and putting it into "unknown" category
datatable(data, rownames=F, extensions = "Buttons",
options =list(dom = "Bfrtip",
buttons=c("copy", "csv", "excel")
),
filter = list(position = "bottom",
clear=F,plain= T
)
)
#Deloitte Bar Chart
filtered_data <- companies %>%
filter(survey_company == "DELOITTE") %>%
group_by(major1, survey_company) %>%
summarise(average_salary = mean(survey_salary))
# Create a responsive plotly bar chart for "DELOITTE"
plot_ly(filtered_data, x = ~major1, y = ~average_salary, type = "bar", marker = list(color = "blue")) %>%
layout(xaxis = list(title = "Major"),
yaxis = list(title = "Average Salary", range = c(0, 80000)),
barmode = "group")
#EY
filtered_data <- companies %>%
filter(survey_company == "EY") %>%
group_by(major1, survey_company) %>%
summarise(average_salary = mean(survey_salary))
# Create a responsive plotly bar chart for "EY"
plot_ly(filtered_data, x = ~major1, y = ~average_salary, type = "bar", marker = list(color = "blue")) %>%
layout(xaxis = list(title = "Major"),
yaxis = list(title = "Average Salary", range = c(0, 80000)),
barmode = "group")
#Textron Bar Chart
filtered_data <- companies %>%
filter(survey_company == "TEXTRON") %>%
group_by(major1, survey_company) %>%
summarise(average_salary = mean(survey_salary))
# Create a responsive plotly bar chart for "TEXTRON"
plot_ly(filtered_data, x = ~major1, y = ~average_salary, type = "bar", marker = list(color = "blue")) %>%
layout(xaxis = list(title = "Major"),
yaxis = list(title = "Average Salary", range = c(0, 80000)),
barmode = "group")
knitr::opts_chunk$set(echo = TRUE,message=FALSE,warning=FALSE)
#package intialization
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(tidyverse, #for data manipulation
plotly, #for interactive plots
flexdashboard, #to make a dashboard
fontawesome, #for icons
DT, #for better tables
ggplot
)
df = read_csv("clean_data.csv")
companies = read_csv("top_companies.csv")
# Finance Major
finance_data <- df[df$major1 == "Finance", ]
plot <- ggplot(finance_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Finance Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(limits = c(0, 100000)) +  # Set the x-axis range up to 100,000
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
analytics_data <- df[df$major1 == "Business Analytics", ]
plot <- ggplot(analytics_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Business Analytics Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
economics_data <- df[df$major1 == "Business Economics", ]
plot <- ggplot(economics_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Economics Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
marketing_data <- df[df$major1 == "Marketing", ]
plot <- ggplot(marketing_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Marketing Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
entre_data <- df[df$major1 == "Entrepreneurship", ]
plot <- ggplot(entre_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Entrepreneurship Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
supply_data <- df[df$major1 == "Supply Chain & Operations Mgmt", ]
plot <- ggplot(supply_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Supply Chain Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
accountancy_data <- df[df$major1 == "Accountancy", ]
plot <- ggplot(accountancy_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Accountancy Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
mgmt_data <- df[df$major1 == "Management and Leadership", ]
plot <- ggplot(mgmt_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Management and Leadership Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
information_data <- df[df$major1 == "Information Systems", ]
plot <- ggplot(information_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Information Systems Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
human_data <- df[df$major1 == "Human Capital Mgmt& Leadership", ]
plot <- ggplot(human_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Human Capital Management Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
result <- df %>%
group_by(major1, year.x) %>%
summarise(average_salary = mean(survey_salary, na.rm = TRUE)) %>%
ungroup()
plotly_chart <- result %>%
plot_ly(x = ~factor(year.x), y = ~average_salary, color = ~major1, type = "scatter", mode = "lines") %>%
layout(
xaxis = list(title = "Year"),
yaxis = list(title = "Average Salary"),
showlegend = TRUE
)
plotly_chart
x_axis_range <- c(0, 100000)  # Used 100,000 to get a more accurate look of the shape of the histogram
interactive_plot <- plot_ly(df, x = ~survey_salary, type = "histogram",
xbins = list(start = x_axis_range[1], end = x_axis_range[2], size = 5000),
marker = list(color = "blue", line = list(color = "black", width = 1)), autobinx = FALSE) %>%
layout(
title = "Histogram of FSB Salaries by Year",
xaxis = list(title = "Salary"),
yaxis = list(title = "Frequency"),
bargap = 0  # Set bargap to 0 to have only one bar per bin
)
interactive_plot
## Creating data frame for comparison.
school = c("Miami", "Miami", "Miami", "Miami","Miami", "Miami", "Indiana", "Indiana", "Indiana", "Indiana","Indiana", "Indiana", "Ohio State", "Ohio State", "Ohio State", "Ohio State", "Ohio State", "Ohio State")
major = c("Accounting", "Economics", "Marketing", "Finance", "Information Systems", "Operations Management", "Accounting", "Economics", "Marketing", "Finance", "Information Systems", "Operations Management", "Accounting", "Economics", "Marketing", "Finance", "Information Systems", "Operations Management")
salary = c(59243, 60760, 52110, 61855, 66616, 56470, 66071, 72032, 60524, 72705, 70816, 64478, 57281, 57794, 55179, 63161, 68445, 58271)
df = data.frame(School = school, Major = major, Salary = salary)
plot <- plot_ly(df, x = ~Major, y = ~Salary, type = 'bar', text = ~School, color = ~School) %>%
layout(title = "Average Salary by Major and School",
xaxis = list(title = "Major"),
yaxis = list(title = "Average Salary"))
plot
data = companies %>%
#filter(intern_status == "Yes") %>%
#filter(pay_status == "Yes") %>%
group_by(survey_company, year.x, major1, survey_salary) %>%
summarize(count=n()) %>%
arrange(survey_company, year.x, major1, survey_salary, -count)
#data$employer = fct_explicit_na(data$employer, "unkown")
#finding all NAs and putting it into "unknown" category
datatable(data, rownames=F, extensions = "Buttons",
options =list(dom = "Bfrtip",
buttons=c("copy", "csv", "excel")
),
filter = list(position = "bottom",
clear=F,plain= T
)
)
#Deloitte Bar Chart
filtered_data <- companies %>%
filter(survey_company == "DELOITTE") %>%
group_by(major1, survey_company) %>%
summarise(average_salary = mean(survey_salary))
# Create a responsive plotly bar chart for "DELOITTE"
plot_ly(filtered_data, x = ~major1, y = ~average_salary, type = "bar", marker = list(color = "blue")) %>%
layout(xaxis = list(title = "Major"),
yaxis = list(title = "Average Salary", range = c(0, 80000)),
barmode = "group")
#EY
filtered_data <- companies %>%
filter(survey_company == "EY") %>%
group_by(major1, survey_company) %>%
summarise(average_salary = mean(survey_salary))
# Create a responsive plotly bar chart for "EY"
plot_ly(filtered_data, x = ~major1, y = ~average_salary, type = "bar", marker = list(color = "blue")) %>%
layout(xaxis = list(title = "Major"),
yaxis = list(title = "Average Salary", range = c(0, 80000)),
barmode = "group")
#Textron Bar Chart
filtered_data <- companies %>%
filter(survey_company == "TEXTRON") %>%
group_by(major1, survey_company) %>%
summarise(average_salary = mean(survey_salary))
# Create a responsive plotly bar chart for "TEXTRON"
plot_ly(filtered_data, x = ~major1, y = ~average_salary, type = "bar", marker = list(color = "blue")) %>%
layout(xaxis = list(title = "Major"),
yaxis = list(title = "Average Salary", range = c(0, 80000)),
barmode = "group")
knitr::opts_chunk$set(echo = TRUE,message=FALSE,warning=FALSE)
#package intialization
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(tidyverse, #for data manipulation
plotly, #for interactive plots
flexdashboard, #to make a dashboard
fontawesome, #for icons
DT, #for better tables
ggplot
)
df = read_csv("clean_data.csv")
companies = read_csv("top_companies.csv")
# Finance Major
finance_data <- df[df$major1 == "Finance", ]
plot <- ggplot(finance_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Finance Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(limits = c(0, 100000)) +  # Set the x-axis range up to 100,000
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
analytics_data <- df[df$major1 == "Business Analytics", ]
plot <- ggplot(analytics_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Business Analytics Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
economics_data <- df[df$major1 == "Business Economics", ]
plot <- ggplot(economics_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Economics Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
marketing_data <- df[df$major1 == "Marketing", ]
plot <- ggplot(marketing_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Marketing Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
entre_data <- df[df$major1 == "Entrepreneurship", ]
plot <- ggplot(entre_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Entrepreneurship Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
supply_data <- df[df$major1 == "Supply Chain & Operations Mgmt", ]
plot <- ggplot(supply_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Supply Chain Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
accountancy_data <- df[df$major1 == "Accountancy", ]
plot <- ggplot(accountancy_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Accountancy Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
mgmt_data <- df[df$major1 == "Management and Leadership", ]
plot <- ggplot(mgmt_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Management and Leadership Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
information_data <- df[df$major1 == "Information Systems", ]
plot <- ggplot(information_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Information Systems Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
human_data <- df[df$major1 == "Human Capital Mgmt& Leadership", ]
plot <- ggplot(human_data, aes(x = survey_salary)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "blue") +
facet_wrap(~year.x, scales = "fixed") +
labs(
title = "Histogram of Human Capital Management Major Salaries",
x = "Salary",
y = "Frequency"
) +
scale_x_continuous(labels = scales::number_format(scale = 1)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
interactive_plot <- ggplotly(plot)
interactive_plot
result <- df %>%
group_by(major1, year.x) %>%
summarise(average_salary = mean(survey_salary, na.rm = TRUE)) %>%
ungroup()
plotly_chart <- result %>%
plot_ly(x = ~factor(year.x), y = ~average_salary, color = ~major1, type = "scatter", mode = "lines") %>%
layout(
xaxis = list(title = "Year"),
yaxis = list(title = "Average Salary"),
showlegend = TRUE
)
plotly_chart
x_axis_range <- c(0, 100000)  # Used 100,000 to get a more accurate look of the shape of the histogram
interactive_plot <- plot_ly(df, x = ~survey_salary, type = "histogram",
xbins = list(start = x_axis_range[1], end = x_axis_range[2], size = 5000),
marker = list(color = "blue", line = list(color = "black", width = 1)), autobinx = FALSE) %>%
layout(
title = "Histogram of FSB Salaries by Year",
xaxis = list(title = "Salary"),
yaxis = list(title = "Frequency"),
bargap = 0  # Set bargap to 0 to have only one bar per bin
)
interactive_plot
## Creating data frame for comparison.
school = c("Miami", "Miami", "Miami", "Miami","Miami", "Miami", "Indiana", "Indiana", "Indiana", "Indiana","Indiana", "Indiana", "Ohio State", "Ohio State", "Ohio State", "Ohio State", "Ohio State", "Ohio State")
major = c("Accounting", "Economics", "Marketing", "Finance", "Information Systems", "Operations Management", "Accounting", "Economics", "Marketing", "Finance", "Information Systems", "Operations Management", "Accounting", "Economics", "Marketing", "Finance", "Information Systems", "Operations Management")
salary = c(59243, 60760, 52110, 61855, 66616, 56470, 66071, 72032, 60524, 72705, 70816, 64478, 57281, 57794, 55179, 63161, 68445, 58271)
df = data.frame(School = school, Major = major, Salary = salary)
plot <- plot_ly(df, x = ~Major, y = ~Salary, type = 'bar', text = ~School, color = ~School) %>%
layout(title = "Average Salary by Major and School",
xaxis = list(title = "Major"),
yaxis = list(title = "Average Salary"))
plot
data = companies %>%
#filter(intern_status == "Yes") %>%
#filter(pay_status == "Yes") %>%
group_by(survey_company, year.x, major1, survey_salary) %>%
summarize(count=n()) %>%
arrange(survey_company, year.x, major1, survey_salary, -count)
#data$employer = fct_explicit_na(data$employer, "unkown")
#finding all NAs and putting it into "unknown" category
datatable(data, rownames=F, extensions = "Buttons",
options =list(dom = "Bfrtip",
buttons=c("copy", "csv", "excel")
),
filter = list(position = "bottom",
clear=F,plain= T
)
)
#Deloitte Bar Chart
filtered_data <- companies %>%
filter(survey_company == "DELOITTE") %>%
group_by(major1, survey_company) %>%
summarise(average_salary = mean(survey_salary))
# Create a responsive plotly bar chart for "DELOITTE"
plot_ly(filtered_data, x = ~major1, y = ~average_salary, type = "bar", marker = list(color = "blue")) %>%
layout(xaxis = list(title = "Major"),
yaxis = list(title = "Average Salary", range = c(0, 80000)),
barmode = "group")
#EY
filtered_data <- companies %>%
filter(survey_company == "EY") %>%
group_by(major1, survey_company) %>%
summarise(average_salary = mean(survey_salary))
# Create a responsive plotly bar chart for "EY"
plot_ly(filtered_data, x = ~major1, y = ~average_salary, type = "bar", marker = list(color = "blue")) %>%
layout(xaxis = list(title = "Major"),
yaxis = list(title = "Average Salary", range = c(0, 80000)),
barmode = "group")
#Textron Bar Chart
filtered_data <- companies %>%
filter(survey_company == "TEXTRON") %>%
group_by(major1, survey_company) %>%
summarise(average_salary = mean(survey_salary))
# Create a responsive plotly bar chart for "TEXTRON"
plot_ly(filtered_data, x = ~major1, y = ~average_salary, type = "bar", marker = list(color = "blue")) %>%
layout(xaxis = list(title = "Major"),
yaxis = list(title = "Average Salary", range = c(0, 80000)),
barmode = "group")
sessionInfo()
